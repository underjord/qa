#!/usr/bin/env elixir

ref =
  case System.argv() do
    [] -> "main"
    [ref] -> ref
  end

targets = [
    "rpi0",
    "rpi",
    "rpi2",
    "rpi3",
    "rpi3a",
    "grisp2",
    "bbb",
    "mangopi_mq_pro",
    "osd32mp1"
]

org = System.fetch_env!("NH_ORG")
product = System.fetch_env!("NH_PRODUCT")

File.rm_rf("_build")
File.mkdir_p!("_build")
signing_key = System.fetch_env!("SIGNING_KEY")
File.write!("_build/sign.key", signing_key)

targets
|> Enum.map(fn target ->
  IO.puts("Building #{target}...")
  contents =
    File.read!("template-mix.exs")
    |> String.replace("# INSERT_SYSTEM_DEP_HERE", "{:nerves_system_#{target}, github: \"nerves-project/nerves_system_#{target}\", ref: \"#{ref}\", runtime: false, targets: :#{target}}")

  File.write!("mix.exs", contents)

  {_, 0} = System.shell("""
    export MIX_TARGET=#{target}; \
    mix deps.get && \
    mix firmware
    """, into: IO.stream())
  IO.puts("#{target} built OK")

  fw_path = "./_build/#{target}_dev/nerves/images/systems_qa.fw"

  IO.puts("Signing #{fw_path}...")
  {_output, 0} = System.shell("fwup --sign -s ./_build/sign.key -i \"#{fw_path}\" -o \"#{fw_path}\"", into: IO.stream())
  IO.puts("Signed")

  {uuid, 0} = System.shell("""
  fwup -i #{fw_path} -m --metadata-key meta-uuid
  """)

  uuid = String.trim(uuid)

  {output, 0} =
  System.shell("""
  export MIX_TARGET=#{target}; \
  nh deployment list\
    --product "#{product}" \
    --org "#{org}"
  """)

  if not String.contains?(output, "#{target} deploy") do
    {_output, 0} =
    System.shell("""
    export MIX_TARGET=#{target}; \
    echo "y\n" | nh firmware publish \
      "#{fw_path}" \
      --product "#{product}" \
      --org "#{org}"
    """, into: IO.stream())

    {_, _status} = System.shell("""
    export MIX_TARGET=#{target}; \
    nh deployment create \
      --name "#{target} deploy" \
      --tag deploy \
      --version "" \
      --firmware "#{uuid}" \
      --org "#{org}" \
      --product "#{product}"
    """, into: IO.stream())
  else
    {_output, 0} =
    System.shell("""
    export MIX_TARGET=#{target}; \
    echo "y\n" | nh firmware publish \
      "#{fw_path}" \
      --deploy "#{target} deploy" \
      --product "#{product}" \
      --org "#{org}"
    """, into: IO.stream())
  end


  IO.puts("UUID: #{uuid}")

    File.rm("mix.exs")
end)
